{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\mongodb-nodejs\\\\frontened-data\\\\my-app\\\\src\\\\component\\\\About.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../redux/hook\";\nimport { fetchAbout } from \"../redux/SliceApi\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(state => state.detail);\n  const location = useLocation();\n  useEffect(() => {\n    dispatch(fetchAbout());\n  }, [dispatch]);\n\n  // Assuming you pass an ID as a query parameter\n  const queryParams = new URLSearchParams(location.search);\n  const id = queryParams.get(\"id\");\n  const filterData = data.aboutData ? data.aboutData.filter(item => item.id.toString() === id) : [];\n  console.log(filterData, \"hello\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filterData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: filterData[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), filterData[0].paragraph.map((para, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: para.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"Qp460/p6OuevpHA6OB61TsIp0g8=\", false, function () {\n  return [useAppDispatch, useAppSelector, useLocation];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useAppDispatch","useAppSelector","fetchAbout","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","About","_s","dispatch","data","state","detail","location","queryParams","URLSearchParams","search","id","get","filterData","aboutData","filter","item","toString","console","log","children","length","title","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","map","para","index","content","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/mongodb-nodejs/frontened-data/my-app/src/component/About.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hook\";\r\nimport { fetchAbout } from \"../redux/SliceApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  const dispatch = useAppDispatch();\r\n  const data = useAppSelector((state) => state.detail);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAbout());\r\n  }, [dispatch]);\r\n\r\n  // Assuming you pass an ID as a query parameter\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const id = queryParams.get(\"id\");\r\n\r\n  const filterData = data.aboutData\r\n    ? data.aboutData.filter((item) => item.id.toString() === id)\r\n    : [];\r\n\r\n  console.log(filterData, \"hello\");\r\n\r\n  return (\r\n    <div>\r\n      {filterData.length > 0 ? (\r\n        <>\r\n          <h1>{filterData[0].title}</h1>\r\n          {filterData[0].paragraph.map((para, index) => (\r\n            <p key={index}>{para.content}</p>\r\n          ))}\r\n          {/* Add more content rendering based on your data structure */}\r\n        </>\r\n      ) : (\r\n        <p>No data found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AAC9D,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGV,cAAc,CAAC,CAAC;EACjC,MAAMW,IAAI,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EACpD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMK,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,EAAE,GAAGH,WAAW,CAACI,GAAG,CAAC,IAAI,CAAC;EAEhC,MAAMC,UAAU,GAAGT,IAAI,CAACU,SAAS,GAC7BV,IAAI,CAACU,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,CAACM,QAAQ,CAAC,CAAC,KAAKN,EAAE,CAAC,GAC1D,EAAE;EAENO,OAAO,CAACC,GAAG,CAACN,UAAU,EAAE,OAAO,CAAC;EAEhC,oBACEf,OAAA;IAAAsB,QAAA,EACGP,UAAU,CAACQ,MAAM,GAAG,CAAC,gBACpBvB,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAKP,UAAU,CAAC,CAAC,CAAC,CAACS;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC7Bb,UAAU,CAAC,CAAC,CAAC,CAACc,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvChC,OAAA;QAAAsB,QAAA,EAAgBS,IAAI,CAACE;MAAO,GAApBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACjC,CAAC;IAAA,eAEF,CAAC,gBAEH5B,OAAA;MAAAsB,QAAA,EAAG;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACpB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlCID,KAAK;EAAA,QACQR,cAAc,EAClBC,cAAc,EACVE,WAAW;AAAA;AAAAoC,EAAA,GAHxB/B,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}